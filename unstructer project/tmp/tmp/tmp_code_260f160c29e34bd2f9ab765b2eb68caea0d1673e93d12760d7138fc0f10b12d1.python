import math

def is_prime(num):
    """
    Checks if a number is prime.

    Args:
      num: The number to check.

    Returns:
      True if the number is prime, False otherwise.
    """
    if num <= 1:
        return False
    if num <= 3:
        return True
    if num % 2 == 0 or num % 3 == 0:
        return False
    i = 5
    while i * i <= num:
        if num % i == 0 or num % (i + 2) == 0:
            return False
        i = i + 6
    return True


# Generate prime numbers from 1 to 20
primes = [num for num in range(1, 21) if is_prime(num)]
non_primes = [num for num in range(1, 21) if not is_prime(num)]


# Plotting part (Import inside a try-except block):
try:
    import matplotlib.pyplot as plt

    plt.figure(figsize=(10, 6))

    plt.bar(primes, [1] * len(primes), color='green', label='Prime')
    plt.bar(non_primes, [0] * len(non_primes), color='red', label='Non-prime')

    plt.xlabel('Number')
    plt.ylabel('Prime/Non-prime')
    plt.title('Prime Numbers from 1 to 20')
    plt.xticks(range(1, 21))
    plt.legend()
    plt.grid(axis='y')
    plt.tight_layout()
    # Important: Save the plot to a file instead of displaying it directly
    plt.savefig('prime_numbers_plot.png')
    print("Plot saved as prime_numbers_plot.png")

except ImportError:
    print("Matplotlib not found. Plotting skipped.")


# Test Cases (Crucial for verifying the logic!)
print("\nTest Cases:")
print("Test Case 1: is_prime(2) =", is_prime(2))
print("Test Case 2: is_prime(10) =", is_prime(10))
print("Test Case 3: is_prime(17) =", is_prime(17))
